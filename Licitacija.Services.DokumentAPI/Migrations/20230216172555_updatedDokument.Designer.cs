// <auto-generated />
using System;
using Licitacija.Services.DokumentAPI.DbConexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Licitacija.Services.DokumentAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230216172555_updatedDokument")]
    partial class updatedDokument
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.Dokument", b =>
                {
                    b.Property<Guid>("DokumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumDonosenja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPotpisivanja")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sablon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusDokumentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZavodniBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DokumentId");

                    b.HasIndex("StatusDokumentaId");

                    b.ToTable("Dokument");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.EksterniDokument", b =>
                {
                    b.Property<Guid>("EksterniDokumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DokumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ustanova")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EksterniDokumentId");

                    b.HasIndex("DokumentId")
                        .IsUnique();

                    b.ToTable("EksterniDokument");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.StatusDokumenta", b =>
                {
                    b.Property<Guid>("StatusDokumentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusDokumentaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusDokumentaId");

                    b.ToTable("StatusDokumenta");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.TipGarancije", b =>
                {
                    b.Property<Guid>("TipGarancijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipGarancijeNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipGarancijeId");

                    b.ToTable("TipGarancije");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.UgovorOZakupu", b =>
                {
                    b.Property<Guid>("UgovorOZakupuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DokumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LicnostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MestoPotpisivanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RokDospeca")
                        .HasColumnType("int");

                    b.Property<DateTime>("RokVracanjaZemljista")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TipGarancijeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UplataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UgovorOZakupuId");

                    b.HasIndex("DokumentId")
                        .IsUnique();

                    b.HasIndex("TipGarancijeId");

                    b.ToTable("UgovorOZakupu");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.Dokument", b =>
                {
                    b.HasOne("Licitacija.Services.DokumentAPI.Entities.StatusDokumenta", "StatusDokumenta")
                        .WithMany("Dokumenti")
                        .HasForeignKey("StatusDokumentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StatusDokumenta");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.EksterniDokument", b =>
                {
                    b.HasOne("Licitacija.Services.DokumentAPI.Entities.Dokument", "Dokument")
                        .WithOne("EksterniDokument")
                        .HasForeignKey("Licitacija.Services.DokumentAPI.Entities.EksterniDokument", "DokumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokument");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.UgovorOZakupu", b =>
                {
                    b.HasOne("Licitacija.Services.DokumentAPI.Entities.Dokument", "Dokument")
                        .WithOne("UgovorOZakupu")
                        .HasForeignKey("Licitacija.Services.DokumentAPI.Entities.UgovorOZakupu", "DokumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licitacija.Services.DokumentAPI.Entities.TipGarancije", "TipGarancije")
                        .WithMany("UgovoriOZakupu")
                        .HasForeignKey("TipGarancijeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dokument");

                    b.Navigation("TipGarancije");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.Dokument", b =>
                {
                    b.Navigation("EksterniDokument");

                    b.Navigation("UgovorOZakupu");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.StatusDokumenta", b =>
                {
                    b.Navigation("Dokumenti");
                });

            modelBuilder.Entity("Licitacija.Services.DokumentAPI.Entities.TipGarancije", b =>
                {
                    b.Navigation("UgovoriOZakupu");
                });
#pragma warning restore 612, 618
        }
    }
}
