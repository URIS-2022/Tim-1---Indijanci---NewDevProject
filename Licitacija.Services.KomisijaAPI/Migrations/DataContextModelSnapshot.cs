// <auto-generated />
using System;
using Licitacija.Services.KomisijaAPI.DbConexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Licitacija.Services.KomisijaAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Licitacija.Services.KomisijaAPI.Entities.Komisija", b =>
                {
                    b.Property<Guid>("KomisijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipKomisijeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KomisijaId");

                    b.HasIndex("TipKomisijeId");

                    b.ToTable("Komisija");
                });

            modelBuilder.Entity("Licitacija.Services.KomisijaAPI.Entities.Licnost", b =>
                {
                    b.Property<Guid>("LicnostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Funkcija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LicnostId");

                    b.ToTable("Licnost");
                });

            modelBuilder.Entity("Licitacija.Services.KomisijaAPI.Entities.LicnostKomisija", b =>
                {
                    b.Property<Guid>("LicnostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KomisijaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LicnostId", "KomisijaId");

                    b.HasIndex("KomisijaId");

                    b.ToTable("LicnostKomisija");
                });

            modelBuilder.Entity("Licitacija.Services.KomisijaAPI.Entities.TipKomisije", b =>
                {
                    b.Property<Guid>("TipKomisijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipKomisijeNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipKomisijeId");

                    b.ToTable("TipKomisije");
                });

            modelBuilder.Entity("Licitacija.Services.KomisijaAPI.Entities.Komisija", b =>
                {
                    b.HasOne("Licitacija.Services.KomisijaAPI.Entities.TipKomisije", "TipKomisije")
                        .WithMany("Komisije")
                        .HasForeignKey("TipKomisijeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipKomisije");
                });

            modelBuilder.Entity("Licitacija.Services.KomisijaAPI.Entities.LicnostKomisija", b =>
                {
                    b.HasOne("Licitacija.Services.KomisijaAPI.Entities.Komisija", "Komisija")
                        .WithMany()
                        .HasForeignKey("KomisijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licitacija.Services.KomisijaAPI.Entities.Licnost", "Licnost")
                        .WithMany()
                        .HasForeignKey("LicnostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komisija");

                    b.Navigation("Licnost");
                });

            modelBuilder.Entity("Licitacija.Services.KomisijaAPI.Entities.TipKomisije", b =>
                {
                    b.Navigation("Komisije");
                });
#pragma warning restore 612, 618
        }
    }
}
