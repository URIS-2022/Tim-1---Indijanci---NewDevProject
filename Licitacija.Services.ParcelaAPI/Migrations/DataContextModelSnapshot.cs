// <auto-generated />
using System;
using Licitacija.Services.ParcelaAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Licitacija.Services.ParcelaAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.DeoParcele", b =>
                {
                    b.Property<Guid>("DeoParceleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EtapaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OtvaranjePonudaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParcelaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PovrsinaDelaParcele")
                        .HasColumnType("int");

                    b.HasKey("DeoParceleId");

                    b.HasIndex("ParcelaId");

                    b.ToTable("DeloviParcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.KatastarskaOpstina", b =>
                {
                    b.Property<Guid>("KatOpstinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KatOpstinaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KatOpstinaId");

                    b.ToTable("KatastarskeOpstine");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Klasa", b =>
                {
                    b.Property<Guid>("KlasaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KlasaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KlasaId");

                    b.ToTable("Klase");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Kultura", b =>
                {
                    b.Property<Guid>("KulturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KulturaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KulturaId");

                    b.ToTable("Kulture");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.OblikSvojine", b =>
                {
                    b.Property<Guid>("OblikSvojineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OblikSvojineNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OblikSvojineId");

                    b.ToTable("ObliciSvojina");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Obradivost", b =>
                {
                    b.Property<Guid>("ObradivostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObradivostNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObradivostId");

                    b.ToTable("Obradivosti");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Odvodnjavanje", b =>
                {
                    b.Property<Guid>("OdvodnjavanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdvNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OdvodnjavanjeId");

                    b.ToTable("Odvodnjavanja");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Parcela", b =>
                {
                    b.Property<Guid>("ParcelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojListaNepokretnosti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojParcele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KatOpstinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KlasaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KlasaStvStanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KulturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KulturaStvStanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OblikSvojineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ObradivostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObradivostStvStanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OdvodnjavanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdvodnjavanjeStvStanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Povrsina")
                        .HasColumnType("int");

                    b.Property<string>("ZZonaStvStanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParcelaId");

                    b.HasIndex("KatOpstinaId");

                    b.HasIndex("KlasaId");

                    b.HasIndex("KulturaId");

                    b.HasIndex("OblikSvojineId");

                    b.HasIndex("ObradivostId");

                    b.HasIndex("OdvodnjavanjeId");

                    b.ToTable("Parcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Povrsina", b =>
                {
                    b.Property<Guid?>("ParcelaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PovrsinaZZone")
                        .HasColumnType("int");

                    b.Property<Guid?>("ZZonaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("ParcelaId");

                    b.HasIndex("ZZonaId");

                    b.ToTable("Povrsine");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.ZasticenaZona", b =>
                {
                    b.Property<Guid>("ZZonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZZonaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZZonaId");

                    b.ToTable("ZasticeneZone");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.DeoParcele", b =>
                {
                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.Parcela", "Parcela")
                        .WithMany("DeloviParcele")
                        .HasForeignKey("ParcelaId");

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Parcela", b =>
                {
                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.KatastarskaOpstina", "KatastarskaOpstina")
                        .WithMany("Parcele")
                        .HasForeignKey("KatastarskaOpstinaId");

                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.Klasa", "Klasa")
                        .WithMany("Parcele")
                        .HasForeignKey("KlasaId");

                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.Kultura", "Kultura")
                        .WithMany("Parcele")
                        .HasForeignKey("KulturaId");

                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.OblikSvojine", "OblikSvojine")
                        .WithMany("Parcele")
                        .HasForeignKey("OblikSvojineId");

                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.Obradivost", "Obradivost")
                        .WithMany("Parcele")
                        .HasForeignKey("ObradivostId");

                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.Odvodnjavanje", "Odvodnjavanje")
                        .WithMany("Parcele")
                        .HasForeignKey("OdvodnjavanjeId");

                    b.Navigation("KatastarskaOpstina");

                    b.Navigation("Klasa");

                    b.Navigation("Kultura");

                    b.Navigation("OblikSvojine");

                    b.Navigation("Obradivost");

                    b.Navigation("Odvodnjavanje");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Povrsina", b =>
                {
                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.Parcela", "Parcela")
                        .WithMany()
                        .HasForeignKey("ParcelaId");

                    b.HasOne("Licitacija.Services.ParcelaAPI.Entities.ZasticenaZona", "ZasticenaZona")
                        .WithMany()
                        .HasForeignKey("ZZonaId");

                    b.Navigation("Parcela");

                    b.Navigation("ZasticenaZona");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.KatastarskaOpstina", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Klasa", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Kultura", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.OblikSvojine", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Obradivost", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Odvodnjavanje", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Licitacija.Services.ParcelaAPI.Entities.Parcela", b =>
                {
                    b.Navigation("DeloviParcele");
                });
#pragma warning restore 612, 618
        }
    }
}
