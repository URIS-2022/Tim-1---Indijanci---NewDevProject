// <auto-generated />
using System;
using Licitacija.Services.ZalbaAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Licitacija.Services.ZalbaAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230210185633_createInitial")]
    partial class createInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.RadnjaNaOsnovuZalbe", b =>
                {
                    b.Property<Guid>("RadnjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RadnjaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RadnjaId");

                    b.HasIndex("RadnjaNaziv")
                        .IsUnique();

                    b.ToTable("RadnjeNaOsnovuZalbe");
                });

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.StatusZalbe", b =>
                {
                    b.Property<Guid>("StatusZalbeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusZalbeNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StatusZalbeId");

                    b.HasIndex("StatusZalbeNaziv")
                        .IsUnique();

                    b.ToTable("StatusiZalbi");
                });

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.TipZalbe", b =>
                {
                    b.Property<Guid>("TipZalbeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipZalbeNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TipZalbeId");

                    b.HasIndex("TipZalbeNaziv")
                        .IsUnique();

                    b.ToTable("TipoviZalbi");
                });

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.Zalba", b =>
                {
                    b.Property<Guid>("ZalbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojNadmetanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojOdluke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojResenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumPodnosenja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumResenja")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FazaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Obrazlozenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RadnjaNaOsnovuZalbeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RazlogZalbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StatusZalbeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TipZalbeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ZalbaId");

                    b.HasIndex("RadnjaNaOsnovuZalbeId");

                    b.HasIndex("StatusZalbeId");

                    b.HasIndex("TipZalbeId");

                    b.ToTable("Zalbe");
                });

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.Zalba", b =>
                {
                    b.HasOne("Licitacija.Services.ZalbaAPI.Entities.RadnjaNaOsnovuZalbe", "RadnjaNaOsnovuZalbe")
                        .WithMany("Zalba")
                        .HasForeignKey("RadnjaNaOsnovuZalbeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licitacija.Services.ZalbaAPI.Entities.StatusZalbe", "StatusZalbe")
                        .WithMany("Zalba")
                        .HasForeignKey("StatusZalbeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licitacija.Services.ZalbaAPI.Entities.TipZalbe", "TipZalbe")
                        .WithMany("Zalba")
                        .HasForeignKey("TipZalbeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RadnjaNaOsnovuZalbe");

                    b.Navigation("StatusZalbe");

                    b.Navigation("TipZalbe");
                });

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.RadnjaNaOsnovuZalbe", b =>
                {
                    b.Navigation("Zalba");
                });

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.StatusZalbe", b =>
                {
                    b.Navigation("Zalba");
                });

            modelBuilder.Entity("Licitacija.Services.ZalbaAPI.Entities.TipZalbe", b =>
                {
                    b.Navigation("Zalba");
                });
#pragma warning restore 612, 618
        }
    }
}
